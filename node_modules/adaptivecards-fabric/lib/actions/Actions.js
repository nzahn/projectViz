"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var AC = require("adaptivecards");
var Shared = require("../utils/shared");
var ActionButton_1 = require("./ActionButton");
exports.createActionDiv = function (title, iconUrl, baseCssClass, iconPlacement, iconSize) {
    var div = Shared.getDiv();
    ReactDOM.render(React.createElement(ActionButton_1.ActionButton, { text: title, className: baseCssClass, iconUrl: iconUrl, iconPlacement: iconPlacement, iconSize: iconSize }), div);
    return div;
};
var OpenUrlActionFabric = /** @class */ (function (_super) {
    __extends(OpenUrlActionFabric, _super);
    function OpenUrlActionFabric() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(OpenUrlActionFabric.prototype, "renderedElement", {
        get: function () {
            return this.internalRenderedElement;
        },
        enumerable: true,
        configurable: true
    });
    OpenUrlActionFabric.prototype.render = function (baseCssClass) {
        var actionsConfig = this.parent.hostConfig.actions;
        var div = exports.createActionDiv(this.title, this.iconUrl, baseCssClass, actionsConfig.iconPlacement, actionsConfig.iconSize);
        this.internalRenderedElement = div;
    };
    return OpenUrlActionFabric;
}(AC.OpenUrlAction));
exports.OpenUrlActionFabric = OpenUrlActionFabric;
var SubmitActionFabric = /** @class */ (function (_super) {
    __extends(SubmitActionFabric, _super);
    function SubmitActionFabric() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SubmitActionFabric.prototype, "renderedElement", {
        get: function () {
            return this.internalRenderedElement;
        },
        enumerable: true,
        configurable: true
    });
    SubmitActionFabric.prototype.render = function (baseCssClass) {
        var actionsConfig = this.parent.hostConfig.actions;
        var div = exports.createActionDiv(this.title, this.iconUrl, baseCssClass, actionsConfig.iconPlacement, actionsConfig.iconSize);
        this.internalRenderedElement = div;
    };
    return SubmitActionFabric;
}(AC.SubmitAction));
exports.SubmitActionFabric = SubmitActionFabric;
var ShowCardActionFabric = /** @class */ (function (_super) {
    __extends(ShowCardActionFabric, _super);
    function ShowCardActionFabric() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ShowCardActionFabric.prototype, "renderedElement", {
        get: function () {
            return this.internalRenderedElement;
        },
        enumerable: true,
        configurable: true
    });
    ShowCardActionFabric.prototype.render = function (baseCssClass) {
        var actionsConfig = this.parent.hostConfig.actions;
        var div = exports.createActionDiv(this.title, this.iconUrl, baseCssClass, actionsConfig.iconPlacement, actionsConfig.iconSize);
        this.internalRenderedElement = div;
    };
    return ShowCardActionFabric;
}(AC.ShowCardAction));
exports.ShowCardActionFabric = ShowCardActionFabric;
var ToggleVisibilityActionFabric = /** @class */ (function (_super) {
    __extends(ToggleVisibilityActionFabric, _super);
    function ToggleVisibilityActionFabric() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ToggleVisibilityActionFabric.prototype, "renderedElement", {
        get: function () {
            return this.internalRenderedElement;
        },
        enumerable: true,
        configurable: true
    });
    ToggleVisibilityActionFabric.prototype.render = function (baseCssClass) {
        var div = Shared.getDiv();
        ReactDOM.render(React.createElement(ActionButton_1.ActionButton, { text: this.title, className: baseCssClass }), div);
        this.internalRenderedElement = div;
    };
    return ToggleVisibilityActionFabric;
}(AC.ToggleVisibilityAction));
exports.ToggleVisibilityActionFabric = ToggleVisibilityActionFabric;
//# sourceMappingURL=Actions.js.map