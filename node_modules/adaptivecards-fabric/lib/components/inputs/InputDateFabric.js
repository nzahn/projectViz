"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var FabricUI = require("office-ui-fabric-react");
var AC = require("adaptivecards");
var Shared = require("../../utils/shared");
var InputDateFabric = /** @class */ (function (_super) {
    __extends(InputDateFabric, _super);
    function InputDateFabric() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderReact = function () {
            return _this.buildDatePicker();
        };
        _this.getJsonTypeName = function () { return "Input.Date"; };
        _this.parse = function (json, errors) {
            _super.prototype.parse.call(_this, json, errors);
            _this.placeholder = AC.getStringValue(json.placeholder);
            _this.parseDates(json, errors);
        };
        _this.toJSON = function () {
            var result = _super.prototype.toJSON.call(_this);
            AC.setProperty(result, "min", _this.minDate);
            AC.setProperty(result, "max", _this.maxDate);
            AC.setProperty(result, "placeholder", _this.placeholder);
            return result;
        };
        _this.parseDates = function (json, errors) {
            _this.value = _this.defaultValue;
            _this.date = _this.value ? _this.getDate(_this.value) : new Date();
            _this.minDate = json.min ? _this.getDate(AC.getStringValue(json.min)) : undefined;
            _this.maxDate = json.max ? _this.getDate(AC.getStringValue(json.max)) : undefined;
        };
        _this.getDate = function (dateString, errors) {
            try {
                return new Date(dateString);
            }
            catch (error) {
                Shared.raiseParseError({
                    error: AC.ValidationError.InvalidPropertyValue,
                    message: error,
                }, errors);
                return undefined;
            }
        };
        _this.buildDatePicker = function () {
            return (React.createElement(FabricUI.DatePicker, { id: _this.id, onSelectDate: _this.handleSelectDate, value: _this.date, placeholder: _this.placeholder, allowTextInput: true, minDate: _this.minDate, maxDate: _this.maxDate }));
        };
        _this.handleSelectDate = function (date) {
            _this.value = date.toLocaleDateString("en-US");
        };
        return _this;
    }
    return InputDateFabric;
}(Shared.ReactInputElement));
exports.InputDateFabric = InputDateFabric;
//# sourceMappingURL=InputDateFabric.js.map